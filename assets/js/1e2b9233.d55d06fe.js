"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[288],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),s=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(r),d=n,f=u["".concat(c,".").concat(d)]||u[d]||m[d]||o;return r?a.createElement(f,i(i({ref:t},p),{},{components:r})):a.createElement(f,i({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[u]="string"==typeof e?e:n,i[1]=l;for(var s=2;s<o;s++)i[s]=r[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},3049:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>m,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const o={sidebar_position:3,id:"restore"},i="Restore service",l={unversionedId:"backup/restore",id:"backup/restore",title:"Restore service",description:"Restore container",source:"@site/docs/backup/restore.md",sourceDirName:"backup",slug:"/backup/restore",permalink:"/middleware-spec/docs/backup/restore",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/backup/restore.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"restore"},sidebar:"tutorialSidebar",previous:{title:"Backup service",permalink:"/middleware-spec/docs/backup/"},next:{title:"Plugin",permalink:"/middleware-spec/docs/category/plugin"}},c={},s=[{value:"Restore container",id:"restore-container",level:2},{value:"Restore volumes",id:"restore-volumes",level:2}],p={toc:s},u="wrapper";function m(e){let{components:t,...r}=e;return(0,n.kt)(u,(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"restore-service"},"Restore service"),(0,n.kt)("h2",{id:"restore-container"},"Restore container"),(0,n.kt)("p",null,"This is the procedure to restore a docker container from a committed image:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Load the image from the saved ",(0,n.kt)("inlineCode",{parentName:"li"},"tar")," archive using ",(0,n.kt)("inlineCode",{parentName:"li"},"docker load")," command:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"docker load -i [image-file].tar\n"))),(0,n.kt)("li",{parentName:"ol"},"Create a new container using the newly loaded image:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"docker create [image-name]\n")))),(0,n.kt)("h2",{id:"restore-volumes"},"Restore volumes"),(0,n.kt)("p",null,"Each volume associated with the container could be restore from a ",(0,n.kt)("inlineCode",{parentName:"p"},"tar")," file following the next steps:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},"Create a new volume with the same name as the original volume:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"docker volume create [volume-name]\n"))),(0,n.kt)("li",{parentName:"ol"},"Restore contents of the saved volume:",(0,n.kt)("pre",{parentName:"li"},(0,n.kt)("code",{parentName:"pre",className:"language-shell"},'docker run --rm -v [volume-name]:/to -v [backup-src]:/from alpine ash -c "cd /from ; tar -C /to -xvf [volume-file-name].tar"\n'))),(0,n.kt)("li",{parentName:"ol"},"Start the container with same volumes as the original container")))}m.isMDXComponent=!0}}]);