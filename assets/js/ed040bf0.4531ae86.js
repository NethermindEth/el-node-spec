"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[359],{3905:(e,t,r)=>{r.d(t,{Zo:()=>u,kt:()=>v});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var o=n.createContext({}),p=function(e){var t=n.useContext(o),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=p(e.components);return n.createElement(o.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(r),m=a,v=c["".concat(o,".").concat(m)]||c[m]||d[m]||s;return r?n.createElement(v,i(i({ref:t},u),{},{components:r})):n.createElement(v,i({ref:t},u))}));function v(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,i=new Array(s);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<s;p++)i[p]=r[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},5162:(e,t,r)=>{r.d(t,{Z:()=>i});var n=r(7294),a=r(6010);const s={tabItem:"tabItem_Ymn6"};function i(e){let{children:t,hidden:r,className:i}=e;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(s.tabItem,i),hidden:r},t)}},4866:(e,t,r)=>{r.d(t,{Z:()=>w});var n=r(7462),a=r(7294),s=r(6010),i=r(2466),l=r(6550),o=r(1980),p=r(7392),u=r(12);function c(e){return function(e){return a.Children.map(e,(e=>{if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))}(e).map((e=>{let{props:{value:t,label:r,attributes:n,default:a}}=e;return{value:t,label:r,attributes:n,default:a}}))}function d(e){const{values:t,children:r}=e;return(0,a.useMemo)((()=>{const e=t??c(r);return function(e){const t=(0,p.l)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,r])}function m(e){let{value:t,tabValues:r}=e;return r.some((e=>e.value===t))}function v(e){let{queryString:t=!1,groupId:r}=e;const n=(0,l.k6)(),s=function(e){let{queryString:t=!1,groupId:r}=e;if("string"==typeof t)return t;if(!1===t)return null;if(!0===t&&!r)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return r??null}({queryString:t,groupId:r});return[(0,o._X)(s),(0,a.useCallback)((e=>{if(!s)return;const t=new URLSearchParams(n.location.search);t.set(s,e),n.replace({...n.location,search:t.toString()})}),[s,n])]}function g(e){const{defaultValue:t,queryString:r=!1,groupId:n}=e,s=d(e),[i,l]=(0,a.useState)((()=>function(e){let{defaultValue:t,tabValues:r}=e;if(0===r.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(t){if(!m({value:t,tabValues:r}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${t}" but none of its children has the corresponding value. Available values are: ${r.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return t}const n=r.find((e=>e.default))??r[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:s}))),[o,p]=v({queryString:r,groupId:n}),[c,g]=function(e){let{groupId:t}=e;const r=function(e){return e?`docusaurus.tab.${e}`:null}(t),[n,s]=(0,u.Nk)(r);return[n,(0,a.useCallback)((e=>{r&&s.set(e)}),[r,s])]}({groupId:n}),h=(()=>{const e=o??c;return m({value:e,tabValues:s})?e:null})();(0,a.useLayoutEffect)((()=>{h&&l(h)}),[h]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:s}))throw new Error(`Can't select invalid tab value=${e}`);l(e),p(e),g(e)}),[p,g,s]),tabValues:s}}var h=r(2389);const k={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};function f(e){let{className:t,block:r,selectedValue:l,selectValue:o,tabValues:p}=e;const u=[],{blockElementScrollPositionUntilNextRender:c}=(0,i.o5)(),d=e=>{const t=e.currentTarget,r=u.indexOf(t),n=p[r].value;n!==l&&(c(t),o(n))},m=e=>{let t=null;switch(e.key){case"Enter":d(e);break;case"ArrowRight":{const r=u.indexOf(e.currentTarget)+1;t=u[r]??u[0];break}case"ArrowLeft":{const r=u.indexOf(e.currentTarget)-1;t=u[r]??u[u.length-1];break}}t?.focus()};return a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":r},t)},p.map((e=>{let{value:t,label:r,attributes:i}=e;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:l===t?0:-1,"aria-selected":l===t,key:t,ref:e=>u.push(e),onKeyDown:m,onClick:d},i,{className:(0,s.Z)("tabs__item",k.tabItem,i?.className,{"tabs__item--active":l===t})}),r??t)})))}function b(e){let{lazy:t,children:r,selectedValue:n}=e;if(r=Array.isArray(r)?r:[r],t){const e=r.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return a.createElement("div",{className:"margin-top--md"},r.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n}))))}function y(e){const t=g(e);return a.createElement("div",{className:(0,s.Z)("tabs-container",k.tabList)},a.createElement(f,(0,n.Z)({},e,t)),a.createElement(b,(0,n.Z)({},e,t)))}function w(e){const t=(0,h.Z)();return a.createElement(y,(0,n.Z)({key:String(t)},e))}},1494:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>v,frontMatter:()=>l,metadata:()=>p,toc:()=>c});var n=r(7462),a=(r(7294),r(3905)),s=r(4866),i=r(5162);const l={sidebar_position:1,id:"metrics-api"},o="EigenLayer Middleware API",p={unversionedId:"metrics/metrics-api",id:"metrics/metrics-api",title:"EigenLayer Middleware API",description:"The EigenLayer Middleware API provides monitoring and common metrics for middleware services designed for the EigenLayer protocol.",source:"@site/docs/metrics/metrics-api.mdx",sourceDirName:"metrics",slug:"/metrics/metrics-api",permalink:"/middleware-spec/docs/metrics/metrics-api",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/metrics/metrics-api.mdx",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,id:"metrics-api"},sidebar:"tutorialSidebar",previous:{title:"Metrics",permalink:"/middleware-spec/docs/category/metrics"},next:{title:"Prometheus Metrics Specification",permalink:"/middleware-spec/docs/metrics/metrics-prom-spec"}},u={},c=[{value:"Base URL",id:"base-url",level:2},{value:"API Versioning",id:"api-versioning",level:2},{value:"Middleware",id:"middleware",level:2},{value:"GET /eigen/middleware/spec-version",id:"get-eigenmiddlewarespec-version",level:3},{value:"Parameters",id:"parameters",level:4},{value:"Responses",id:"responses",level:4},{value:"GET /eigen/middleware/version",id:"get-eigenmiddlewareversion",level:3},{value:"Parameters",id:"parameters-1",level:4},{value:"Responses",id:"responses-1",level:4},{value:"GET /eigen/middleware/health",id:"get-eigenmiddlewarehealth",level:3},{value:"Parameters",id:"parameters-2",level:4},{value:"Responses",id:"responses-2",level:4},{value:"GET /eigen/middleware/services",id:"get-eigenmiddlewareservices",level:3},{value:"Parameters",id:"parameters-3",level:4},{value:"Responses",id:"responses-3",level:4},{value:"GET /eigen/middleware/services/{service_ID}/health",id:"get-eigenmiddlewareservicesservice_idhealth",level:3},{value:"Parameters",id:"parameters-4",level:4},{value:"Responses",id:"responses-4",level:4}],d={toc:c},m="wrapper";function v(e){let{components:t,...r}=e;return(0,a.kt)(m,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"eigenlayer-middleware-api"},"EigenLayer Middleware API"),(0,a.kt)("p",null,"The EigenLayer Middleware API provides monitoring and common metrics for middleware services designed for the EigenLayer protocol."),(0,a.kt)("h2",{id:"base-url"},"Base URL"),(0,a.kt)("p",null,"The base URL for the API is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/eigen\n")),(0,a.kt)("h2",{id:"api-versioning"},"API Versioning"),(0,a.kt)("p",null,"This document describes the API version 1.0.0."),(0,a.kt)("p",null,"The API version can be included in the query string as follows:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"/eigen/endpoint?version=1.0.0\n")),(0,a.kt)("p",null,"In case of handling a request without the version query parameter, the API will respond with the latest version of the API."),(0,a.kt)("p",null,"If the requested version is not supported, the API will respond with a 404 Not Found error and the following message:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "API version not found"\n}\n')),(0,a.kt)("h2",{id:"middleware"},"Middleware"),(0,a.kt)("p",null,"Endpoints to query middleware related information."),(0,a.kt)("h3",{id:"get-eigenmiddlewarespec-version"},"GET /eigen/middleware/spec-version"),(0,a.kt)("p",null,"Provides API identity information in a format similar to ",(0,a.kt)("a",{parentName:"p",href:"https://www.rfc-editor.org/rfc/rfc7231#section-5.5.3"},"HTTP User-Agent")),(0,a.kt)("h4",{id:"parameters"},"Parameters"),(0,a.kt)("p",null,"No parameters"),(0,a.kt)("h4",{id:"responses"},"Responses"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"200")," - Request successful"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Content-Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"application/json")),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"example",label:"Example Value",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "api_version": "v1.0.0"\n}\n'))),(0,a.kt)(i.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "object",\n  "properties": {\n    "api_version": {\n      "type": "string",\n      "description": "API specification version"\n    }\n  },\n  "required": [\n    "version"\n  ]\n}\n')))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"500")," - Internal server error"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Content-Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"application/json")),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"example",label:"Example Value",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "Internal server error"\n}\n'))),(0,a.kt)(i.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "object",\n  "properties": {\n    "message": {\n      "type": "string",\n      "description": "Error message"\n    }\n  },\n  "required": [\n    "message"\n  ]\n}\n')))),(0,a.kt)("h3",{id:"get-eigenmiddlewareversion"},"GET /eigen/middleware/version"),(0,a.kt)("p",null,"Provides middleware service identity information in a format similar to ",(0,a.kt)("a",{parentName:"p",href:"https://www.rfc-editor.org/rfc/rfc7231#section-5.5.3"},"HTTP User-Agent")),(0,a.kt)("h4",{id:"parameters-1"},"Parameters"),(0,a.kt)("p",null,"No parameters"),(0,a.kt)("h4",{id:"responses-1"},"Responses"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"200")," - Request successful"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Content-Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"application/json")),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"example",label:"Example Value",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "version": "EigenLayer-Middleware/v1.0.0"\n}\n'))),(0,a.kt)(i.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "object",\n  "properties": {\n    "version": {\n      "type": "string",\n      "description": "Middleware service version"\n    }\n  },\n  "required": [\n    "version"\n  ]\n}\n')))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"500")," - Internal server error"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Content-Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"application/json")),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"example",label:"Example Value",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "Internal server error"\n}\n'))),(0,a.kt)(i.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "object",\n  "properties": {\n    "message": {\n      "type": "string",\n      "description": "Error message"\n    }\n  },\n  "required": [\n    "message"\n  ]\n}\n')))),(0,a.kt)("h3",{id:"get-eigenmiddlewarehealth"},"GET /eigen/middleware/health"),(0,a.kt)("p",null,"Returns middleware service health status in HTTP status codes."),(0,a.kt)("h4",{id:"parameters-2"},"Parameters"),(0,a.kt)("p",null,"No parameters"),(0,a.kt)("h4",{id:"responses-2"},"Responses"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"200")," - Middleware service is healthy"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"206")," - Middleware service is partially healthy. It is either initializing or some backing services are not healthy."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"503")," - Middleware service is unhealthy or having issues."),(0,a.kt)("h3",{id:"get-eigenmiddlewareservices"},"GET /eigen/middleware/services"),(0,a.kt)("p",null,"Returns a list of all backing services that are currently registered with the middleware service setup. Useful to determine if a service is currently registered with the middleware service and to get the service ID for health endpoint."),(0,a.kt)("h4",{id:"parameters-3"},"Parameters"),(0,a.kt)("p",null,"No parameters"),(0,a.kt)("h4",{id:"responses-3"},"Responses"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"200")," - Request successful"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Content-Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"application/json")),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"example",label:"Example Value",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "services": [\n    {\n      "id": "db-1",\n      "name": "Database",\n      "description": "Database description",\n      "status": "Up",\n    },\n    {\n      "id": "idx-2",\n      "name": "Indexer",\n      "description": "Indexer description",\n      "status": "Down",\n    }\n  ]\n}\n'))),(0,a.kt)(i.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "object",\n  "properties": {\n    "services": {\n      "type": "array",\n      "description": "List of backing services",\n      "items": {\n        "type": "object",\n        "properties": {\n          "id": {\n            "type": "string",\n            "description": "Service ID"\n          },\n          "name": {\n            "type": "string",\n            "description": "Service name"\n          },\n          "description": {\n            "type": "string",\n            "description": "Service description"\n          },\n          "status": {\n            "type": "string",\n            "description": "Service status. Possible values are Up, Down, or Initializing."\n\n          }\n        },\n        "required": [\n          "id",\n          "name",\n          "description"\n        ]\n      }\n    }\n  },\n  "required": [\n    "services"\n  ]\n}\n')))),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"500")," - Internal server error"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Content-Type:")," ",(0,a.kt)("inlineCode",{parentName:"p"},"application/json")),(0,a.kt)(s.Z,{mdxType:"Tabs"},(0,a.kt)(i.Z,{value:"example",label:"Example Value",default:!0,mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "message": "Internal server error"\n}\n'))),(0,a.kt)(i.Z,{value:"schema",label:"Schema",mdxType:"TabItem"},(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "type": "object",\n  "properties": {\n    "message": {\n      "type": "string",\n      "description": "Error message"\n    }\n  },\n  "required": [\n    "message"\n  ]\n}\n')))),(0,a.kt)("h3",{id:"get-eigenmiddlewareservicesservice_idhealth"},"GET /eigen/middleware/services/{service_ID}/health"),(0,a.kt)("p",null,"Returns the health status of the given service in HTTP status codes. The service ID is the service ID returned by the ",(0,a.kt)("inlineCode",{parentName:"p"},"/eigen/v1/services")," endpoint. The service is considered healthy if the service is registered with the middleware service and the service is currently online."),(0,a.kt)("h4",{id:"parameters-4"},"Parameters"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"service_ID")," ",(0,a.kt)("inlineCode",{parentName:"p"},"string")," ",(0,a.kt)("inlineCode",{parentName:"p"},"(path)")," - Service ID"),(0,a.kt)("h4",{id:"responses-4"},"Responses"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"200")," - Backing service is healthy"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"206")," - Backing service is partially healthy. It is either initializing or not ready yet."),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"503")," - Backing service is unhealthy or having issues."))}v.isMDXComponent=!0}}]);