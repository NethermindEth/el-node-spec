"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[6189],{3905:(e,n,t)=>{t.d(n,{Zo:()=>c,kt:()=>f});var r=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=l(t),u=i,f=m["".concat(p,".").concat(u)]||m[u]||d[u]||a;return t?r.createElement(f,o(o({ref:n},c),{},{components:t})):r.createElement(f,o({ref:n},c))}));function f(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=u;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s[m]="string"==typeof e?e:i,o[1]=s;for(var l=2;l<a;l++)o[l]=t[l];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},851:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>s,toc:()=>l});var r=t(7462),i=(t(7294),t(3905));const a={sidebar_position:2,id:"manifest"},o="Manifest file",s={unversionedId:"spec/packaging/manifest",id:"spec/packaging/manifest",title:"Manifest file",description:"The Manifest file is an essential component of the AVS Node package structure. It provides crucial information about the AVS version, its name, and the list of profiles that are included in the package. The upgrade field of the Manifest file indicates whether an upgrade is optional, recommended, or required, which allows users to determine how and when to upgrade their AVS to the latest version.",source:"@site/docs/spec/packaging/manifest.md",sourceDirName:"spec/packaging",slug:"/spec/packaging/manifest",permalink:"/docs/spec/packaging/manifest",draft:!1,editUrl:"https://github.com/NethermindEth/el-node-spec/edit/main/docs/docs/spec/packaging/manifest.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,id:"manifest"},sidebar:"sidebar",previous:{title:"Packaging procedure",permalink:"/docs/spec/packaging/"},next:{title:"Profile file",permalink:"/docs/spec/packaging/profiles"}},p={},l=[{value:"Manifest format",id:"manifest-format",level:2},{value:"<code>&lt;hardware_requirements&gt;</code>",id:"hardware_requirements",level:3},{value:"<code>&lt;plugin&gt;</code>",id:"plugin",level:3},{value:"Manifest schema",id:"manifest-schema",level:2}],c={toc:l},m="wrapper";function d(e){let{components:n,...t}=e;return(0,i.kt)(m,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"manifest-file"},"Manifest file"),(0,i.kt)("p",null,"The Manifest file is an essential component of the AVS Node package structure. It provides crucial information about the AVS version, its name, and the list of profiles that are included in the package. The ",(0,i.kt)("inlineCode",{parentName:"p"},"upgrade")," field of the Manifest file indicates whether an upgrade is optional, recommended, or required, which allows users to determine how and when to upgrade their AVS to the latest version."),(0,i.kt)("p",null,"Additionally, the Manifest file specifies the structure of the AVS package, which includes a ",(0,i.kt)("inlineCode",{parentName:"p"},"profile")," folder and a ",(0,i.kt)("inlineCode",{parentName:"p"},"manifest.yml")," file. The ",(0,i.kt)("inlineCode",{parentName:"p"},"profile")," folder contains a Docker Compose file, an ",(0,i.kt)("inlineCode",{parentName:"p"},".env")," file with default values for environment variables, and the ",(0,i.kt)("inlineCode",{parentName:"p"},"profile.yml")," configuration file. This folder structure ensures that all the necessary files to set up the AVS Node in an on-premise setup using Docker Compose as a service manager are included in the package."),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"manifest.yml")," file specifies the version of the specification, the AVS Node name, hardware requirements for the AVS Node, information about the AVS provided ",(0,i.kt)("a",{parentName:"p",href:"#plugin"},"plugin"),", and a list of profiles. The profile list includes the name of each profile and its relative path within the package. This information is crucial for users to understand what profiles are available and how to access them within the package."),(0,i.kt)("p",null,"The file\u2019s name ",(0,i.kt)("strong",{parentName:"p"},"MUST")," be ",(0,i.kt)("inlineCode",{parentName:"p"},"manifest.yml"),"."),(0,i.kt)("h2",{id:"manifest-format"},"Manifest format"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# AVS Specification version\nversion: <string>\n\n# Name of the AVS Node\nname: <string>\n\n# Upgrade recommendation: optional, recommended, required\nupgrade: <string>\n\n# Hardware Requirements\nhardware_requirements: <hardware_requirements>\n\n# Plugin source\nplugin: <plugin>\n\n# List of AVS package profiles\nprofiles:\n[ - <string> ]\n")),(0,i.kt)("h3",{id:"hardware_requirements"},(0,i.kt)("inlineCode",{parentName:"h3"},"<hardware_requirements>")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# Minimum number of CPU cores\nmin_cpu_cores: <int>\n\n# Minimum free memory space needed to run this profile in MiB\nmin_ram: <int>\n\n# Minimum free disk space needed to run this profile in MiB\nmin_free_space: <int>\n\n# true if setup should not proceed if any hardware requirement is not met\nstop_if_requirements_are_not_met: <bool>\n")),(0,i.kt)("h3",{id:"plugin"},(0,i.kt)("inlineCode",{parentName:"h3"},"<plugin>")),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"/docs/spec/plugin/intro"},"plugin documentation")," to learn more about the plugin system."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"# Pre-built image name ready to be pulled.\nimage: <string>\n")),(0,i.kt)("h2",{id:"manifest-schema"},"Manifest schema"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},'$schema: "http://json-schema.org/draft-07/schema#"\ntype: object\nproperties:\n  version:\n    type: string\n  name:\n    type: string\n  upgrade:\n    type: string\n  hardware_requirements:\n    type: object\n    properties:\n      min_cpu_cores:\n        type: integer\n        minimum: 0\n      min_ram:\n        type: integer\n        minimum: 0\n      min_free_space:\n        type: integer\n        minimum: 0\n      stop_if_requirements_are_not_met:\n        type: boolean\n    required:\n    - min_cpu_cores\n    - min_ram\n    - min_free_space\n    - stop_if_requirements_are_not_met\n    additionalProperties: false\n  plugin:\n    type: object\n    properties:\n      image:\n        type: string\n    additionalProperties: false\n    required:\n    - image\n  profiles:\n    type: array\n    minItems: 1\n    items:\n      type: string\nrequired:\n- version\n- name\n- profiles\nadditionalProperties: false\n')))}d.isMDXComponent=!0}}]);